
stages:
  - test
  - build
  - pp
  - prod
  - docker-push-image
  - deploy

variables:
  ansible_key: --check --diff

.common_ci:
  image: $CI_REGISTRY_IMAGE:build
  stage: deploy
  only:
    - master
  before_script:
    - chmod 755 -R ${CI_PROJECT_DIR}
    - eval "$(ssh-agent -s)" && ansible-vault view files/rsa-keys/ansible | ssh-add -
  when: manual

update ssh:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts ssh.yml ${ansible_key}

asterisk:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts asterisk.yml ${ansible_key}

cassandra:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts cassandra.yml ${ansible_key}

dns:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts dns.yml ${ansible_key}

node:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts node.yml ${ansible_key}

openvpn:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts openvpn.yml ${ansible_key}

postgres:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts postgres.yml ${ansible_key}

radius:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts radius.yml ${ansible_key}

redis:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts redis.yml ${ansible_key}

stage:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts stage.yml ${ansible_key}

web:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts web.yml ${ansible_key}

web data:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts web_data.yml ${ansible_key}

zabbix:
  extends: .common_ci
  script:
    - ansible-playbook -i inventories/prod/hosts zabbix-server.yml ${ansible_key}

lint:
  image: particlekit/ansible-lint
  stage: test
  script:
      - ansible-lint all.yml

build:
  stage: build
  script:
      - echo "build"
      - echo $CI_PROJECT_NAMESPACE
      - echo $CI_PROJECT_PATH
      - echo $CI_PROJECT_NAME
      - echo $CI_REGISTRY_IMAGE
      - echo $CI_PROJECT_DIR

deploy to preprod:
  stage: pp
  when: on_success
  script:
    - echo "deploy to preprod"
  except:
    - master


deploy to prod:
  stage: prod
#  when: manual
  when: on_success
  script:
    - echo "deploy to prod"
  allow_failure: false
  only:
    - master

build_image:
  allow_failure: true
  image: docker:stable
  stage: docker-push-image
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:build --build-arg vault_pass=${vault_pass} .
#    - docker tag $CI_REGISTRY_IMAGE:build $REGISTRY_BASE:build
    - docker push $CI_REGISTRY_IMAGE:build
  only:
    changes:
      - Dockerfile
#  except:
#    - tags
#    - branches
