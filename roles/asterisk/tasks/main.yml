---
- name: check exist asterisk
  stat: path=/usr/sbin/asterisk
  changed_when: False
  failed_when: False
  register: asterisk_available

- name: Install asterisk pre-requisites via apt
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - build-essential
    - libssl-dev
    - libncurses5-dev
    - libnewt-dev
    - libxml2-dev
    - linux-headers-{{ ansible_kernel }}
    - libsqlite3-dev
    - uuid-dev
    - libjansson-dev

- name: create  user asterisk
  user:
    name: "{{ asterisk_username }}"
    system: yes
    createhome: no

- name: create asterisk folder
  file:
    path: "{{item}}"
    state: directory
    mode: 0755
  with_items:
    - "{{ iasterisk_srcdir }}"
    - /opt/asterisk

- name: Download asterisk source
  get_url:
    url: https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-13-current.tar.gz
    dest: /tmp/asterisk-13-current.tar.gz
    mode: 0740
  when: asterisk_available.stat.exists == false

- name: Extract asterisk
  unarchive:
    src: /tmp/asterisk-13-current.tar.gz
    dest: "{{ iasterisk_srcdir }}"
    remote_src: yes
    extra_opts: --strip-components=1
  register: extract
  when: asterisk_available.stat.exists == false

- name: copy menuselect.makeopts file
  copy:
    src: test
    dest: "{{ iasterisk_srcdir }}/menuselect.makeopts"
  when: asterisk_available.stat.exists == false

#- name: Install asterisk
#  shell: cd /tmp/{{ version }} && yes | ./contrib/scripts/install_prereq test; \
#         yes | ./contrib/scripts/install_prereq install; \
#         ./configure; \
#         make NOISY_BUILD=yes; \
#         make install; \
#         make config; \
#         make install-logrotate; \
#         make samples
#  when: asterisk_available.stat.exists == false

- name: Build Asterisk from tarball
  command: "{{ item }} chdir={{ iasterisk_srcdir }}"
  with_items:
    - ./configure
    - make NOISY_BUILD=yes
    - make install
    - make config
    - make install-logrotate
    - make samples
  when: asterisk_available.stat.exists == false

- name: Copy asterisk config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items: "{{ asterisk_template }}"
  notify: restart asterisk

- name: delete default config
  file:
    path: "/etc/asterisk/{{ item }}"
    state: absent
    force: yes
  with_items: "{{ del_config }}"
  notify: restart asterisk

- name: change user and group for asterisk files
  file:
    path: "{{ item }}"
    owner: asterisk
    group: asterisk
    recurse: yes
  with_items: "{{ asterisk_folders }}"
  notify: restart asterisk

- name: change user and group for asterisk config
  file:
    path: /etc/asterisk
    owner: root
    group: asterisk
    recurse: yes
  notify: restart asterisk

#- name: asterisk configure global settings.
#  lineinfile:
#    dest: "/etc/asterisk/asterisk.conf"
#    regexp: "^;?{{ item.option }}.+$"
#    line: "{{ item.option }} = {{ item.value }}"
#    state: "{{ item.state | default('present') }}"
#  with_items: "{{ asterisk_global_config_options }}"
#  notify: restart asterisk

- name: open port for asterisk
  ufw:
    rule: allow
    port: 5060
    proto: udp

- name: make executed file
  file:
    path: "{{ item }}"
    mode: "u+x,g+x"
  with_items: "{{ asterisk_exec }}"

- name: Check Asterisk trunks
  cron:
    name: "Check Asterisk trunks"
    job: "/opt/asterisk/status.sh >> /var/log/asterisk/status.log 2>&1"

- name: Asterisk multifon balance movement
  cron:
    name: "Check Asterisk trunks"
    minute: "0"
    hour: "5"
    day: "1"
    job: "/opt/asterisk/dds.sh >> /var/log/asterisk/dds.log 2>&1"