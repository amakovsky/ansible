---
- name: check exist asterisk
  stat:
    path: "{{ asterisk_bindir }}"
  changed_when: false
  failed_when: false
  register: asterisk_available

- name: Install asterisk pre-requisites via apt
  apt:
    name: "{{ asterisk_pre_requisites }}"
    state: present

- name: create  user asterisk
  user:
    name: "{{ asterisk_username }}"
    system: true
    createhome: false

- name: build asterisk from source
  block:
    - name: create asterisk source folder
      file:
        path: "{{item}}"
        state: directory
        mode: 0755
      with_items:
        - "{{ asterisk_srcdir }}"

    - name: Extract asterisk source
      unarchive:
        src: "{{ asterisk_source_url }}"
        dest: "{{ asterisk_srcdir }}"
        remote_src: true
        extra_opts: --strip-components=1

    - name: copy menuselect.makeopts file
      copy:
        src: "menuselect.makeopts"
        dest: "{{ asterisk_srcdir }}/menuselect.makeopts"

    - name: Build Asterisk from tarball
      command: "{{ item }} chdir={{ asterisk_srcdir }}"
      with_items:
        - ./configure
        - make NOISY_BUILD=yes
        - make install
        - make config
        - make install-logrotate
        - make samples

    - name: Clear out directory after install
      file:
        state: absent
        path: "{{ item }}/"
      with_items:
        - "{{ asterisk_srcdir }}"
  when: asterisk_available.stat.exists == false

- name: create asterisk opt folder
  file:
    path: "{{item}}"
    state: directory
    mode: 0755
  with_items:
    - "{{ asterisk_optdir }}"

- name: Copy asterisk config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items: "{{ asterisk_template }}"
  when: asterisk_template is defined
  notify: restart asterisk

- name: delete default config
  file:
    path: "/etc/asterisk/{{ item }}"
    state: absent
    force: true
  with_items: "{{ asterisk_del_config }}"
  notify: restart asterisk

- name: change user and group for asterisk folders
  file:
    path: "{{ item }}"
    owner: asterisk
    group: asterisk
    recurse: true
  with_items: "{{ asterisk_folders }}"
#  notify: restart asterisk


- name: asterisk configure global settings.
  lineinfile:
    dest: "/etc/asterisk/asterisk.conf"
    regexp: "^;?{{ item.option }}.+$"
    line: "{{ item.option }} = {{ item.value }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ asterisk_global_config_options }}"
  when: asterisk_template|length == 0
  notify: restart asterisk

- name: make executed file
  file:
    path: "{{ item.file }}"
    mode: "u+x,g+x"
  with_items: "{{ asterisk_exec }}"
  when: asterisk_exec|length > 0

- name: Configuring cron
  cron:
    name: "{{ item.name | default(omit) }}"
    minute: "{{ item.minute | default(omit) }}"
    hour: "{{ item.hour | default(omit) }}"
    day: "{{ item.day | default(omit) }}"
    job: "{{ item.job | default(omit) }}"
  with_items: "{{ asterisk_exec }}"
  when: asterisk_exec|length > 0
