---
- name: include task green_blue
  include_tasks: "green_blue.yml"
  when: green_blue_count is defined

- name: include task ssl
  include_tasks: "ssl.yml"
  when: SSL is defined and SSL

- name: include task galera
  include_tasks: "galera.yml"
  when: galera_enable

#- name: add host
#  lineinfile:
#    path: /etc/hosts
#    line: '127.0.0.1     {{ item.value.url }}'
#    state: present
#  with_dict: "{{ virtualhost }}"

- name: add host
  lineinfile:
    path: /etc/hosts
    line: '127.0.0.1     {{ item }}'
    state: present
  with_items: "{{ hosts_var }}"

- name: Clone project repositories
  git:
    repo: "git@{{ gitlab }}:{{ git_repo }}"
    dest: "{{ folder }}"
    version: "{{ git_branch }}"
    force: yes
    accept_hostkey: yes
    key_file: /home/{{ local_user }}/id_rsa
  become_user: "{{ local_user }}"
  become: yes
  register: cloned
  notify: restart php-fpm

#- name: delete robots.txt
#  file:
#    path: "{{ folder }}/frontend/web/robots.txt"
#    state: absent
#    force: yes

- name: install composer
  composer:
    command: install
    working_dir: "{{ folder }}"
    no_dev: no
  become: yes
  become_user: "{{ local_user }}"
  when: cloned is changed and install_composer

- name: Run php init for project
  shell: php init --env={{ type }} --overwrite=No
  args:
    chdir: "{{ folder }}"
    creates: "{{ folder }}/{{ run_init_check }}"
  become: yes
  become_user: "{{ local_user }}"
  when: run_init or (run_init_check if defined)
  register: first_run
  tags: skip_ansible_lint

- name: change permission for assets
  file:
    path: "{{ folder }}/frontend_api/web/assets"
    state: directory
    mode: 0775
  become: yes
  become_user: "{{ local_user }}"

- name: Copy site configuration
  template:
    src: "{{ project }}/{{ item.value.src }}"
    dest: "{{ folder }}/{{ item.value.dest }}"
  with_dict: "{{ web_configs }}"
  when: web_configs is defined
  become: yes
  become_user: "{{ local_user }}"

- name: copy nginx configs
  template:
    src: 'nginx.host.j2'
    dest: '/etc/nginx/sites-available/{{ item.value.url }}.conf'
  with_dict: "{{ virtualhost }}"
  register: change_conf
  notify: restart nginx
#  no_log: true

- name: link nginx config
  file:
    src: '/etc/nginx/sites-available/{{ item.value.url }}.conf'
    dest: '/etc/nginx/sites-enabled/{{ item.value.url }}.conf'
    state: link
    force: yes
  with_dict: "{{ virtualhost }}"
  notify: restart nginx
  no_log: true

- name: Copy nginx_auth configuration
  template:
    src: .htpasswd
    dest: "/var/www/.htpasswd_{{ item.value.url }}"
  with_dict: "{{ virtualhost }}"
  when: item.value.auth is defined and item.value.auth
  no_log: true

- name: include task db
  include_tasks: "db.yml"
  when: try_db

- name: include task static
  include_tasks: "static.yml"

- name: include task npm
  include_tasks: "npm.yml"
#  when: enable_npm

- name: validate nginx conf
  command: nginx -t
  changed_when: false
  when: change_conf is changed

- name: include task after_green_blue
  include_tasks: "after_green_blue.yml"
  when: green_blue_count is defined

- name: include task queue
  include_tasks: "queue.yml"

- name: ensure nginx started
  systemd:
    state: started
    name: nginx

- name: enable cron
  cron:
    name: "yii cron"
    minute: "*"
    job: "php {{ root_folder }}/link/yii cron/run"
  become_user: "{{ local_user }}"
  run_once: true
  become: yes