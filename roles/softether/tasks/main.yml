---
- name: check exist softether
  stat:
    path: "{{ softether_srcdir }}/vpnserver"
  changed_when: False
  failed_when: False
  register: softether_available

- name: Install softether pre-requisites via apt
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - build-essential

- name: create softether folder
  file:
    path: "{{item}}"
    state: directory
    mode: 0755
  with_items:
    - "{{ softether_srcdir }}"

- name: Download softether source
  get_url:
    url: http://www.softether-download.com/files/softether/v4.27-9668-beta-2018.05.29-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.27-9668-beta-2018.05.29-linux-x64-64bit.tar.gz
    dest: /tmp/softether-vpnserver-v4.27-9668-beta-2018.05.29-linux-x64-64bit.tar.gz
    mode: 0740
  when: softether_available.stat.exists == false

- name: Extract softether
  unarchive:
    src: /tmp/softether-vpnserver-v4.27-9668-beta-2018.05.29-linux-x64-64bit.tar.gz
    dest: "{{ softether_srcdir }}"
    remote_src: yes
    extra_opts: --strip-components=1
  register: extract
  when: softether_available.stat.exists == false

- name: Build softether from tarball
  command: "{{ item }} chdir={{ softether_srcdir }}"
  with_items:
    - make i_read_and_agree_the_license_agreement
  when: softether_available.stat.exists == false

- name: Copy softether config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0775
  with_items: "{{ softether_template }}"
  register: copy_config

- name: Build softether from tarball
  command: update-rc.d -f vpnserver defaults
  when: copy_config is changed

- name: Start service softether, if not running
  service:
    name: vpnserver
    state: started