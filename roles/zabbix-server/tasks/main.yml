---
- name: check exist zabbix-agent
  stat: path=/usr/sbin/zabbix_server
  changed_when: False
  failed_when: False
  register: zabbix_available

- name: Download zabbix apt source
  get_url:
    url: https://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+{{ ansible_distribution_release }}_all.deb
    dest: /tmp/zabbix-release_3.4-1+{{ ansible_distribution_release }}_all.deb
    mode: 0740
  when: zabbix_available.stat.exists == false

- name: Install apt repo
  apt: deb="/tmp/zabbix-release_3.4-1+{{ ansible_distribution_release }}_all.deb"
  when: zabbix_available.stat.exists == false

- name: Install common
  apt: name={{ item }} update_cache=yes state=present
  with_items:
    - zabbix-server-mysql
    - zabbix-frontend-php
    - zabbix-agent

- name: Copy zabbix-server database dump
  copy:
    src: zabbix.gz
    dest: /tmp/zabbix.gz
  when: zabbix_available.stat.exists == false

- mysql_db:
    name: "{{ db_name }}"
    state: import
    target: /tmp/zabbix.gz
  when: zabbix_available.stat.exists == false

- mysql_user:
    name: "{{ db_user }}"
    host: localhost
    password: "{{ db_pass }}"
    priv: "{{ db_name }}.*:ALL"
    state: present

- name: edit zabbix-server config file
  lineinfile:
    backup: no
    path: /etc/zabbix/zabbix_server.conf
    regexp: "{{ item.path }}"
    line: "{{ item.regexp }}"
  with_items:
    - { path: 'DBHost=*', regexp: 'DBHost={{ db_host }}' }
    - { path: 'DBName=*', regexp: 'DBName={{ db_name }}' }
    - { path: 'DBUser=*', regexp: 'DBUser={{ db_user }}' }
    - { path: 'DBPassword=*', regexp: 'DBPassword={{ db_pass }}' }
  notify: restart zabbix-server

- name: edit apache2 config file
  lineinfile:
    backup: no
    path: /etc/apache2/conf-enabled/zabbix.conf
    regexp: "{{ item.path }}"
    line: "{{ item.regexp }}"
  with_items:
    - { path: 'Alias /zabbix*', regexp: '#Alias /zabbix /usr/share/zabbix' }
  notify: restart apache2

- name: copy mariadb config
  template:
    src: 'mysqld.cnf'
    dest: '/etc/mysql/conf.d/mariadb.cnf'
    force: yes
  notify: restart mariadb

- name: copy telegramm config
  template:
    src: 'telegram.sh'
    dest: '/usr/lib/zabbix/alertscripts/telegram.sh'
    force: yes
    owner: zabbix
    group: zabbix
    mode: 0760

- name: copy zabbix-server config
  template:
    src: 'zabbix.conf.php'
    dest: '/usr/share/zabbix/conf/zabbix.conf.php'
    force: yes

- name: starte zabbix-server
  systemd:
    state: started
    name: zabbix-server

- name: enable zabbix-server
  systemd:
    enabled: yes
    name: zabbix-server.service

- name: enable zabbix-client
  systemd:
    enabled: yes
    name: zabbix-agent.service

- name: starte zabbix-client
  systemd:
    state: started
    name: zabbix-agent

- name: copy nginx configs
  template:
    src: 'apache.conf'
    dest: '/etc/apache2/sites-available/000-default.conf'
    force: yes
  notify: restart apache2

- name: link nginx config
  file:
    src: '/etc/apache2/sites-available/000-default.conf'
    dest: '/etc/apache2/sites-enabled/000-default.conf'
    state: link
    force: yes
  notify: restart apache2

#- name: Configure open ports for zabbix-server
#  ufw:
#    rule: "{{ item.rule }}"
#    port: "{{ item.port }}"
#    proto: "{{ item.proto }}"
#  with_items:
#    - { rule: 'allow', port: 10051, proto: 'tcp' }
#    - { rule: 'allow', port: 80, proto: 'tcp' }