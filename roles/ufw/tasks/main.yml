---
- name: Install ufw
  apt:
    name: "{{ item }}"
    update_cache: yes
#    state: latest
  with_items:
    - ufw

#- set_fact:
#      war_files_list_of_dicts: |
#          {% set res = [] -%}
#          {% for key in with_dict.keys() -%}
#             {% for value in war_files[key] -%}
#              {% set ignored = res.extend([{'Server': key, 'WAR':value}]) -%}
#             {%- endfor %}
#          {%- endfor %}
#          {{ res }}

- name: Resetting firewall
  ufw:
    state: reset
  when: ufw_reset

- name: Configuring port/protocol/network rules
  ufw:
    delete: "{{ item.0.delete | default(omit) }}"
    direction: "{{ item.0.direction | default(omit) }}"
    from_ip: "{{ item.1 | default(omit) }}"
    from_port: "{{ item.0.from_port | default(omit) }}"
    insert: "{{ item.0.insert | default(omit) }}"
    interface: "{{ item.0.interface | default(omit) }}"
    log: "{{ item.0.log | default(omit) }}"
    logging: "{{ item.0.logging | default(omit) }}"
    name: "{{ item.0.name | default(omit) }}"
    policy: "{{ item.0.policy | default(omit) }}"
    port: "{{ item.0.port | default(omit) }}"
    proto: "{{ item.0.proto | default(omit) }}"
    rule: "{{ item.0.rule | default('allow') }}"
    state: "{{ item.0.state | default(omit) }}"
    to_ip: "{{ item.0.to_ip | default(omit) }}"
    to_port: "{{ item.0.to_port | default(omit) }}"
  with_subelements:
    - "{{ ufw_rules | selectattr('from_ip', 'defined') | list }}"
    - from_ip
  register: ufw_change

- name: Configure default incoming/outgoing rules with ufw.
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
    state: enabled
  with_items:
    - { direction: outgoing, policy: allow }
    - { direction: incoming, policy: deny }
  when: ufw_change is changed