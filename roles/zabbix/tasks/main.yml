---
- name: check exist zabbix-agent
  stat:
    path: "{{ zabbix_bindir }}"
  register: zabbix_available

- name: Download zabbix apt source
  get_url:
    url: "{{ zabbix_apt_url }}"
    dest: /tmp/zabbix_all.deb
    mode: 0740
  when: zabbix_available.stat.exists == false

- name: Install apt repo
  apt:
    deb: "/tmp/zabbix_all.deb"
  when: zabbix_available.stat.exists == false

- name: Install common
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - python-pip
    - libcurl3
    - zabbix-agent

- name: install pip-zabbix
  pip:
    name: py-zabbix

- name: check exist nginx
  stat: path=/usr/sbin/nginx
  register: nginx_available

- name: Set variable 'nginx'
  set_fact:
    nginx: 1
  when: nginx_available.stat.exists == true

- name: check exist mysql-server
  stat: path=/usr/sbin/mysqld
  register: mysql_available

- name: Set variable 'mysql'
  set_fact:
    mysql: 1
  when: mysql_available.stat.exists == true

- name: create folder for project zabbix
  file:
    path: '{{ item }}'
    state: directory
    owner: zabbix
    group: zabbix
  with_items:
    - "{{ zabbix_script_directory }}"
    - "{{ zabbix_conf_directory }}"

- name: copy zabbix_agent auto register script
  template:
    src: autoreg-enable-tls-psk_comm.py.j2
    dest: '{{ zabbix_script_directory }}/autoreg-enable-tls-psk_comm.py'
    owner: zabbix
    group: zabbix
    mode: 0755
  when: zabbix_available.stat.exists == false

- name: copy clear scripts
  copy:
    src: clear.sh
    dest: "{{ zabbix_script_directory }}/clear.sh"
    owner: root
    group: zabbix
    mode: 0770
  when: zabbix_available.stat.exists == false

- name: add scripts to sudo
  lineinfile:
    state: present
    path: /etc/sudoers
    line: 'zabbix ALL=(ALL) NOPASSWD:{{ zabbix_script_directory }}/clear.sh'
  when: zabbix_available.stat.exists == false

- name: gen psk
  shell: openssl rand -hex 32 > /etc/zabbix/zabbix_agentd.psk
  args:
    creates: /etc/zabbix/zabbix_agentd.psk

- name: edit config file
  lineinfile:
    backup: yes
    path: /etc/zabbix/zabbix_agentd.conf
    regexp: "{{ item.path }}"
    line: "{{ item.regexp }}"
  with_items:
    - { path: '^ServerActive=', regexp: 'ServerActive={{ zabbix_server }}' }
    - { path: '^Hostname=', regexp: 'Hostname={{ ansible_nodename }}' }
    - { path: '^Server=', regexp: 'Server={{ zabbix_server }}' }
    - { path: '^(.*)ListenPort=', regexp: 'ListenPort={{ zabbix_port }}' }
    - { path: '^(.*)HostMetadataItem=', regexp: 'HostMetadataItem=system.uname' }
    - { path: '^(.*)TLSConnect=unencrypted', regexp: 'TLSConnect=unencrypted' }
    - { path: '^(.*)TLSAccept=unencrypted', regexp: 'TLSAccept=unencrypted,psk' }
    - { path: '^(.*)TLSPSKIdentity=', regexp: 'TLSPSKIdentity=PSK {{ ansible_nodename }}' }
    - { path: '^(.*)TLSPSKFile=', regexp: 'TLSPSKFile=/etc/zabbix/zabbix_agentd.psk' }
    - { path: '^(.*)Include=/etc/zabbix/zabbix_agentd.conf.d/', regexp: 'Include=/etc/zabbix/zabbix_agentd.d/*.conf' }
  when: zabbix_available.stat.exists == false

- name: copy zabbix_agent auto register script
  template:
    src: userparameter.conf.j2
    dest: "{{ zabbix_conf_directory }}/userparameter.conf"
  when: zabbix_available.stat.exists == false

- name: get contents of PSK file
  command: cat /etc/zabbix/zabbix_agentd.psk
  register: filename
  when: zabbix_available.stat.exists == false

- name: insert PSK into autoconfig
  lineinfile:
    path: "{{ zabbix_script_directory }}/autoreg-enable-tls-psk_comm.py"
    regexp: '^(.*)PSK=""'
    line: 'PSK="{{filename.stdout}}"'
  when: zabbix_available.stat.exists == false

- name: enable zabbix
  systemd:
    enabled: yes
    state: started
    name: zabbix-agent.service

- include_tasks: "nginx.yml"
  when: nginx_available.stat.exists == true

- include_tasks: "netstat.yml"
  when: netstat == 1

- include_tasks: "smartctl.yml"
  when: smartctl == 1

- include_tasks: "mysql.yml"
  when: mysql_available.stat.exists == true

- include_tasks: "mysql_slave.yml"
  when: mysql_slave == 1