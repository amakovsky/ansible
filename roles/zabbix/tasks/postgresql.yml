---
- name: copy zabbix user parameter for mysql
  copy:
    src: userparameter_postgresql.conf
    dest: "{{ zabbix_conf_directory }}/userparameter_postgresql.conf"
  notify: restart zabbix

- name: Configure postgres settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ zabbix_postgresql_config_options }}"
  notify: restart postgresql

- name: Ensure PostgreSQL databases are present.
  postgresql_db:
    name: zabbix
#    name: "{{ item.name }}"
#    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
#    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
#    encoding: "{{ item.encoding | default('UTF-8') }}"
#    template: "{{ item.template | default('template0') }}"
#    login_host: "{{ item.login_host | default('localhost') }}"
#    login_password: "{{ item.login_password | default(omit) }}"
#    login_user: "{{ item.login_user | default(postgresql_user) }}"
#    login_unix_socket: "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}"
#    port: "{{ item.port | default(omit) }}"
#    owner: "{{ item.owner | default(postgresql_user) }}"
#    state: "{{ item.state | default('present') }}"
#  with_items: 'zabbix'
  become: yes
#  no_log: true
  become_user: "{{ postgresql_user }}"

- postgresql_ext:
    name: pg_stat_statements
    db: zabbix
  become: yes
#  no_log: true
  become_user: "{{ postgresql_user }}"

- postgresql_ext:
    name: pg_buffercache
    db: zabbix
  become: yes
#  no_log: true
  become_user: "{{ postgresql_user }}"