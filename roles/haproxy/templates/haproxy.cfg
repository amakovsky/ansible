global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
{% if SSL %}
frontend http_frontend
        bind *:80
        mode http
        redirect scheme https code 301 if !{ ssl_fc }

frontend firstbalance443
        bind *:443 ssl crt /etc/haproxy/uremont.pem
       # option forwardfor
#        option tcplog
        mode http
        option forwardfor header X-Real-IP
        default_backend webservers443

backend webservers443
        mode http
        balance roundrobin
#        option ssl-hello-chk
        {% for item in groups['web'] %}
        server webserver{{ loop.index }} {{ item }}:443 ssl verify none
        {% endfor %}

#       option httpchk
        stats enable
        stats uri /haproxy?stats
        stats realm Strictly\ Private

{% else %}
frontend firstbalance
        bind *:80
        option forwardfor header X-Real-IP
        default_backend webservers

backend webservers
        balance roundrobin
        option httpclose
        {% for item in groups['web'] %}
                server webserver{{ loop.index }} {{ item }}:80 check
        {% endfor %}
        stats enable
        stats uri /haproxy?stats
        stats realm Strictly\ Private
{% endif %}

