---
- name: check exist nginx
  stat:
    path: "{{ nginx_bindir }}/nginx"
  changed_when: False
  failed_when: False
  register: nginx_available

- name: Install required package
  apt:
    name: "{{ passenger_required }}"
    update_cache: yes
    cache_valid_time: 3600

- name: backup nginx bin for upgrade
  command: "cp {{ nginx_bindir }}/nginx {{ nginx_bindir }}/nginx.bac"
  when: nginx_available.stat.exists == true and update_nginx

- name: install nginx
  block:
    - name: Install Passenger
      command: 'gem install passenger'

    - name: Symlink bundler binaries on the system path
      file:
        state: 'link'
        src: '{{ rvm1_install_path }}/wrappers/default/passenger'
        dest: '{{ rvm1_symlink_to }}/passenger'

    - name: Passenger and Nginx
    #  shell: bash -lc "passenger-install-nginx-module --auto --auto-download --extra-configure-flags='--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log' --languages ruby --prefix={{ passenger_nginx_dir }}"
      command: bash -lc "passenger-install-nginx-module --auto --auto-download --extra-configure-flags='--error-log-path=/var/log/nginx/error.log' --languages ruby --prefix={{ passenger_nginx_dir }}"

    - name: move nginx bin to /usr/sbin
      command: 'cp {{ passenger_nginx_dir }}/sbin/nginx {{ nginx_bindir }}/'
  when: nginx_available.stat.exists == false or update_nginx

- name: get passenger version
  shell: "passenger -v | cut -d ' ' -f 3"
  register: passenger_version
  tags: skip_ansible_lint

- debug:
    msg: "{{ passenger_version }}"

- name: Ensure nginx directory exists.
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "root"
    state: directory
    mode: 0775
  with_items:
    - "{{ nginx_dir }}"
    - "{{ nginx_configs_folder }}/sites-enabled"
    - "{{ nginx_configs_folder }}/sites-available"

- name: Copy init.d config for nginx
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0775
  with_items: "{{ passenger_template }}"
  notify: restart nginx

#- name: Configure nginx global settings.
#  lineinfile:
#    dest: "{{ passenger_nginx_dir }}/conf/nginx.conf"
#    regexp: "^#?{{ item.option }}.+$"
#    line: "{{ item.option }} {{ item.value }};"
#    state: "{{ item.state | default('present') }}"
#  with_items: "{{ nginx_global_config_options }}"
#  notify: restart nginx

#- name: Copy config for nginx
#  template:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#    mode: 0775
#  with_items: "{{ passenger_template }}"
#  notify: restart nginx

- name: validate nginx conf
  command: nginx -t
  changed_when: false