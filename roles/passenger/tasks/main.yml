---
- name: check exist nginx
  stat: path=/usr/sbin/nginx
  changed_when: False
  failed_when: False
  register: nginx_available

- name: backup nginx bin for upgrade
  command: 'gem install passenger'
  when: nginx_available.stat.exists == true and update_nginx

- name: Install Passenger
  command: 'gem install passenger'
  when: nginx_available.stat.exists == false or update_nginx

- name: Passenger and Nginx
  shell: bash -lc "passenger-install-nginx-module --auto --auto-download --extra-configure-flags="--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log" --languages ruby --prefix={{ passenger_nginx_dir }}"
  args:
    creates: /usr/sbin/nginx

- name: Copy init.d config for nginx
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0775
  with_items: "{{ passenger_template }}"
  notify: restart nginx

- name: Ensure nginx directory exists.
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "root"
    state: directory
    mode: 0775
  with_items: "{{ nginx_dir }}"

- name: move nginx bin to /usr/sbin
  command: 'mv {{ passenger_nginx_dir }}/sbin/nginx /usr/sbin/'
  args:
    creates: /usr/sbin/nginx

- name: move nginx config to /etc/nginx
  shell: mv {{ passenger_nginx_dir }}/conf/* /etc/nginx/
  args:
    creates: /etc/nginx/nginx.conf

- name: Configure nginx global settings.
  lineinfile:
#    dest: "{{ passenger_nginx_dir }}/conf/nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} {{ item.value }};"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ nginx_global_config_options }}"
  notify: restart nginx

- name: include sites-enabled configs
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    insertafter: 'http {'
    line: "include /etc/nginx/sites-enabled/*;"
    state: "present"
  notify: restart nginx

- name: validate nginx conf
  command: nginx -t
  changed_when: false