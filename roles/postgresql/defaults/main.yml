---
# RHEL/CentOS only. Set a repository to use for PostgreSQL installation.
postgresql_enablerepo: ""

# Set postgresql state when configuration changes are made. Recommended values:
# `restarted` or `reloaded`
postgresql_restarted_state: "restarted"

private_interface: eth1
interface_fact_var: ansible_{{ private_interface }}

postgresql_python_library: python-psycopg2
postgresql_user: postgres
postgresql_group: postgres

rep_user: replication
rep_password: taimoaphee3Ri4ah
rep_db: replication
postgresql_unix_socket_directories:
  - /var/run/postgresql

# Global configuration options that will be set in postgresql.conf.
postgresql_global_config_options:
  - option: unix_socket_directories
    value: '{{ postgresql_unix_socket_directories | join(",") }}'
  - option: listen_addresses
    value: '{{ hostvars[inventory_hostname][interface_fact_var].ipv4.address }}, localhost'
  - option: shared_buffers
    value: '{{ (ansible_memtotal_mb * 0.25)|int|abs }}MB'
  - option: max_connections
    value: '1000'
  - option: shared_preload_libraries
    value: 'pg_partman_bgw'
  - option: pg_partman_bgw.interval
    value: '3600'
  - option: pg_partman_bgw.dbname
    value: 'hotspot'
  - option: effective_io_concurrency
    value: '6'
  - option: seq_page_cost
    value: '1.0'
  - option: random_page_cost
    value: '2.0'

postgresrep_postgres_conf_lines:
  - option: wal_level
    value: 'hot_standby'
  - option: max_wal_senders
    value: '10'
  - option: wal_keep_segments
    value: '100'
  - option: hot_standby
    value: 'on'
  - option: archive_mode
    value: 'on'
  - option: archive_command
    value: '/bin/true'
  - option: max_replication_slots
    value: '4'

# Host based authentication (hba) entries to be added to the pg_hba.conf. This
# variable's defaults reflect the defaults that come with a fresh installation.
postgresql_hba_entries:
  - { type: local, database: all, user: postgres, auth_method: peer }
  - { type: local, database: all, user: all, auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
#  - { type: host, database: {{ rep_db }}, user: {{ rep_db }}, address: '::1/128', auth_method: md5 }

# Debian only. Used to generate the locales used by PostgreSQL databases.
postgresql_locales:
  - 'en_US.UTF-8'

# Databases to ensure exist.
postgresql_databases: []
  # - name: exampledb # required; the rest are optional
  #   lc_collate: # defaults to 'en_US.UTF-8'
  #   lc_ctype: # defaults to 'en_US.UTF-8'
  #   encoding: # defaults to 'UTF-8'
  #   template: # defaults to 'template0'
  #   login_host: # defaults to 'localhost'
  #   login_password: # defaults to not set
  #   login_user: # defaults to '{{ postgresql_user }}'
  #   login_unix_socket: # defaults to 1st of postgresql_unix_socket_directories
  #   port: # defaults to not set
  #   owner: # defaults to postgresql_user
  #   state: # defaults to 'present'

# Users to ensure exist.
postgresql_users: []
  # - name: jdoe #required; the rest are optional
  #   password: # defaults to not set
  #   encrypted: # defaults to not set
  #   priv: # defaults to not set
  #   role_attr_flags: # defaults to not set
  #   db: # defaults to not set
  #   login_host: # defaults to 'localhost'
  #   login_password: # defaults to not set
  #   login_user: # defaults to '{{ postgresql_user }}'
  #   login_unix_socket: # defaults to 1st of postgresql_unix_socket_directories
  #   port: # defaults to not set
  #   state: # defaults to 'present'

#allow_ip:
#  - "{{ hostvars[groups['openvpn'][0]].private_ip }}/32"

getbase_from_master: false

