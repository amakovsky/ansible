---
# Variable configuration.
- include_tasks: variables.yml

- name: Check if postgresql is installed
  environment:
    LC_MESSAGES: 'C'
  shell: dpkg-query -W -f='${Version}\n' 'postgresql-{{ postgresql_version }}' | grep -v '^$'
  register: postgresql_server_register_version
  check_mode: false
  changed_when: false
  failed_when: false

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: pg_partman.yml
  when: postgresql_pg_partman

- include_tasks: initialize.yml
- include_tasks: configure.yml

- include: "{{ postgresrep_role }}.yml"
  when: postgresrep_role is defined and postgresrep_role != 'skip'

- name: Ensure PostgreSQL is started and enabled on boot.
  service:
    name: "{{ postgresql_daemon }}"
    state: started
    enabled: true

# Configure PostgreSQL.
- import_tasks: users.yml
  when: postgresrep_role is not defined or postgresrep_role != 'slave'

- import_tasks: databases.yml
  when: postgresrep_role is not defined or postgresrep_role != 'slave'

- import_tasks: priv.yml
  when: postgresrep_role is not defined or postgresrep_role != 'slave'

- import_tasks: backup.yml
  when: postgresrep_role is defined and postgresrep_role != 'master'
