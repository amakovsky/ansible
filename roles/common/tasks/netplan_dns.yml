---
- name: fetch netplan file from server
  fetch:
    src: "/etc/netplan/{{ netplan_config }}"
    dest: "/tmp/{{ inventory_hostname }}{{ netplan_config }}"
    flat: true
  changed_when: false

- name: load netplan file
  include_vars:
    file: "/tmp/{{ inventory_hostname }}{{ netplan_config }}"
    name: cloud

# - debug:
#    msg: "{{ item }}"
#  with_items: "{{ cloud.network.ethernets.eth0.nameservers.addresses[0] }}"

- name: edit netpaln config file for all servers
  lineinfile:
    backup: true
    path: "/etc/netplan/{{ netplan_config }}"
    regexp: "{{ item.path }}"
    line: "{{ item.line }}"
  with_items:
    - { path: "^.*{{ cloud.network.ethernets.eth0.nameservers.addresses[0] }}", line: "                - {{ hostvars[groups['dns'][0]].ansible_ssh_host }}" }
    - { path: "^.*{{ cloud.network.ethernets.eth0.nameservers.addresses[1] }}", line: "                - {{ hostvars[groups['dns'][0]].ansible_ssh_host }}" }
  when: cloud.network.ethernets.eth0.nameservers.addresses[0] != hostvars[groups['dns'][0]].ansible_ssh_host and ansible_ssh_host != hostvars[groups['dns'][0]].ansible_ssh_host
  notify: netplan apply

- name: edit netpaln config file for dns server
  lineinfile:
    backup: true
    path: "/etc/netplan/{{ netplan_config }}"
    regexp: "{{ item.path }}"
    line: "{{ item.regexp }}"
  with_items:
    - { path: "^.*{{ cloud.network.ethernets.eth0.nameservers.addresses[0] }}", regexp: "                - 127.0.0.1" }
  when: cloud.network.ethernets.eth0.nameservers.addresses[0] != '127.0.0.1' and ansible_ssh_host == hostvars[groups['dns'][0]].ansible_ssh_host
  notify: netplan apply

- name: validate netpaln conf
  command: "/usr/sbin/netplan generate"
#  shell: "/usr/sbin/netplan try"
  changed_when: false

- name: netplan apply
  command: netplan apply
  changed_when: false
