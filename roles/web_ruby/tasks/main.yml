---
- name: Include postgresql vars files
  include_vars:
    file: "{{ postgrs_conf }}"
    name: postgresql_var

- name: Include s3 vars files
  include_vars:
    file: "{{ s3_conf }}"
    name: s3

#- debug:
#    msg: "{{ s3 }}"

- name: Include radius vars files
  include_vars:
    file: "{{ radius_conf }}"
    name: radius_var

- name: Include cassandra vars files
  include_vars:
    file: "{{ cassandra_conf }}"
    name: cassandra_var

- name: add rule for monit to sudo
  lineinfile:
    state: present
    path: /etc/sudoers
    line: "{{ web_user }} ALL=(ALL) NOPASSWD: /usr/bin/monit unmonitor sidekiq_*, /usr/bin/monit monitor sidekiq_*, /bin/mv /tmp/monit.conf /opt/www/hotspot/shared/tmp/monit/sidekiq_*.conf, /usr/bin/monit reload"

- name: Install libpq-dev programm
  apt:
    name: libpq-dev
    update_cache: yes
    cache_valid_time: 3600

- name: Install imagemagick  programm
  apt:
    name: imagemagick
    update_cache: yes
    cache_valid_time: 3600

- name: Copy ssl cert for gitlab
  copy:
    src: "../../files/rsa-keys/id_rsa"
    dest: ~/.ssh/id_rsa
    mode: 0600
  become_user: "{{ web_user }}"
  become: yes

- name: create web folder
  file:
    path: "{{ ruby_shared_folders }}/{{ item.value }}"
    state: directory
    mode: 0775
  with_dict: "{{ ruby_shared }}"
  when: item.key == 'dir'
  become_user: "{{ web_user }}"
  become: yes

- name: Create captive stub folder
  file:
    path: "{{ captive_folder }}"
    state: directory
    mode: 0775
  become_user: "{{ web_user }}"
  become: yes

- name: Copy captive stub files
  copy:
    src: "captive/{{ item }}"
    dest: "{{ captive_folder }}/{{ item }}"
  become_user: "{{ web_user }}"
  become: yes
  with_items:
    - index.html
    - favicon.ico

- name: Copy  template
  template:
    src: "{{ item.1.src }}"
    dest: "{{ ruby_shared_folders }}/{{ item.0.dir }}/{{ item.1.dest }}"
  with_subelements:
    - "{{ ruby_shared | selectattr('template', 'defined') | list }}"
    - template

- name: Copy  file
  copy:
    src: "{{ item.1.src }}"
    dest: "{{ ruby_shared_folders }}/{{ item.0.dir }}/{{ item.1.dest }}"
  with_subelements:
    - "{{ ruby_shared | selectattr('file', 'defined') | list }}"
    - file

- name: create nginx config
  block:
  - name: copy nginx configs
    template:
      src: 'nginx/{{ item }}.conf'
      dest: '{{ nginx_configs_folder }}/sites-available/{{ item }}.conf'
    notify: restart nginx
    with_items:
    - captive
    - hotspot

  - name: link nginx config
    file:
      src: '{{ nginx_configs_folder }}/sites-available/{{ item }}.conf'
      dest: '{{ nginx_configs_folder }}/sites-enabled/{{ item }}.conf'
      state: link
      force: yes
    notify: restart nginx
    no_log: true
    with_items:
    - captive
    - hotspot

  when: virtual_hosts is defined

- name: create monit config
  file:
    path: '{{ ruby_project_folder }}/shared/tmp/monit/'
    state: directory
    mode: 0775
  become_user: "{{ web_user }}"
  become: yes

- name: link monit config
  file:
    src: '{{ ruby_project_folder }}/shared/tmp/monit/'
    dest: '/etc/monit/conf.d/hotspot'
    state: link

- name: Configuration cron vars
  cronvar:
    name: "{{ item.name | default(omit) }}"
    value: "{{ item.value | default(omit) }}"
  with_items: "{{ web_cron_vars }}"
  when: web_cron_vars | length > 0
  become_user: "{{ web_user }}"
  become: yes

- name: Configuring cron
  cron:
    name: "{{ item.name | default(omit) }}"
    minute: "{{ item.minute | default(omit) }}"
    hour: "{{ item.hour | default(omit) }}"
    day: "{{ item.day | default(omit) }}"
    job: "{{ item.job | default(omit) }}"
  with_items: "{{ web_cron }}"
  when: web_cron | length > 0
  become_user: "{{ web_user }}"
  become: yes

- name: Copy  template for logrotate
  template:
    src: "logrotate_hotspot.j2"
    dest: "/etc/logrotate.d/hotspot"