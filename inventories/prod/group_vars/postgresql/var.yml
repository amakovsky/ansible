---
postgresql_users:
  - name: "{{ hotspot_user }}"
    password: "{{ hotspot_user_pass }}"
  - name: "{{ radius_user }}"
    password: "{{ radius_user_pass }}"

postgresql_databases:
  - name: hotspot
    owner: "{{ hotspot_user }}"
  - name: radius_users_mikrotik
    owner: "{{ radius_user }}"
  - name: radius_users_cisco
    owner: "{{ radius_user }}"
  - name: radius_users_chilli
    owner: "{{ radius_user }}"
  - name: radius_access_points
    owner: "{{ radius_user }}"

ufw_rules:
  - rule: 'allow'
    port: 22
    proto: 'tcp'
    from_ip:
      - "{{ hostvars[groups['openvpn'][0]].private_ip }}"
    to_ip: "{{ inventory_hostname }}"
  - rule: 'allow'
    port: 5432
    proto: 'tcp'
    from_ip: "{{ [groups['radius'], groups['postgresql'], hostvars[groups['openvpn'][0]].private_ip]|flatten }}"
    to_ip: "{{ inventory_hostname }}"

postgresql_global_config_options:
  - option: unix_socket_directories
    value: '{{ postgresql_unix_socket_directories | join(",") }}'
  - option: listen_addresses
    value: '{{ inventory_hostname }}, localhost'
  - option: shared_buffers
    value: '{{ (ansible_memtotal_mb * 0.25)|int|abs }}MB'
  - option: max_connections
    value: '1000'
  - option: shared_preload_libraries
    value: 'pg_partman_bgw'
  - option: pg_partman_bgw.interval
    value: '3600'
  - option: pg_partman_bgw.dbname
    value: 'hotspot'
  - option: effective_io_concurrency
    value: '6'
  - option: seq_page_cost
    value: '1.0'
  - option: random_page_cost
    value: '2.0'

postgresrep_postgres_conf_lines:
  - option: wal_level
    value: 'hot_standby'
  - option: max_wal_senders
    value: '10'
  - option: wal_keep_segments
    value: '100'
  - option: hot_standby
    value: 'on'
  - option: archive_mode
    value: 'on'
  - option: archive_command
    value: '/bin/true'
  - option: max_replication_slots
    value: '4'

postgresql_hba_entries:
  - { type: local, database: all, user: postgres, auth_method: peer }
  - { type: local, database: all, user: all, auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }

postgresql_python_library: python-psycopg2
postgresql_user: postgres
postgresql_group: postgres

rep_user: replication
rep_db: replication
postgresql_unix_socket_directories:
  - /var/run/postgresql

postgresql_pg_partman: true